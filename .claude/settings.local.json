{
  "permissions": {
    "allow": [
      "Bash(echo $HOME)",
      "Bash(python:*)",
      "Bash(timeout 10s python -m src.mcp_memory_service.server:*)",
      "Bash(uv:*)",
      "Bash(GTK_IM_MODULE=\"\" python -m src.mcp_memory_service.server --debug)",
      "Bash(cat:*)",
      "Bash(grep:*)",
      "WebFetch(domain:github.com)",
      "Bash(chmod:*)",
      "Bash(gh issue close:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(gh issue list:*)",
      "Bash(gh issue comment:*)",
      "WebFetch(domain:glama.ai)",
      "WebFetch(domain:alexgarcia.xyz)",
      "Bash(rg:*)",
      "Bash(/bin/bash -c \"git status\")",
      "Bash(ls:*)",
      "Bash(bash -c 'export PATH=\"\"/usr/bin:/bin:$PATH\"\" && git status')",
      "Bash(bash -l -c 'git status')",
      "Bash(pytest:*)",
      "Bash(docker build:*)",
      "Bash(git checkout:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(uv run:*)",
      "Bash(npx @modelcontextprotocol/inspector uv:*)",
      "Bash(git commit:*)",
      "Bash(echo:*)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(export MCP_MEMORY_STORAGE_BACKEND=sqlite_vec)",
      "Bash(./start_sqlite_vec.sh:*)",
      "Bash(timeout:*)",
      "Bash(./setup_claude_mcp.sh:*)",
      "Bash(git fetch:*)",
      "Bash(git rebase:*)",
      "Bash(rm:*)",
      "Bash(curl:*)",
      "Bash(start /B python:*)",
      "Bash(where uv)",
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(mkdir:*)",
      "Bash(git merge-base:*)",
      "Bash(git fetch:*)",
      "Bash(git rebase:*)",
      "Bash(claude mcp:*)",
      "Bash(powershell:*)",
      "Bash(setx:*)",
      "Bash(set MCP_MEMORY_STORAGE_BACKEND=sqlite_vec)",
      "Bash(set MCP_MEMORY_HTTP_AUTO_START=true)",
      "Bash(set MCP_HTTP_PORT=8000)",
      "Bash(cmd /c:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(git commit:*)",
      "Bash(memory:*)",
      "Bash(cp:*)",
      "mcp__memory-service__check_database_health",
      "mcp__memory-service__store_memory",
      "mcp__memory-service__retrieve_memory",
      "Bash(MCP_MEMORY_STORAGE_BACKEND=sqlite_vec timeout 10s uv run memory --debug)",
      "Bash(MCP_MEMORY_STORAGE_BACKEND=sqlite_vec timeout 10s python -m src.mcp_memory_service.server --debug)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(git tag:*)",
      "Bash(export MCP_CONSOLIDATION_ENABLED=true)",
      "Bash(export MCP_MDNS_ENABLED=true)",
      "Bash(export MCP_HTTPS_ENABLED=true)",
      "Bash(export MCP_MDNS_SERVICE_NAME=\"MCP Memory Service - Consolidated\")",
      "Bash(export MCP_HTTP_ENABLED=true)",
      "Bash(export:*)",
      "Bash(export MCP_HTTP_PORT=8000)",
      "Bash(export MCP_API_KEY=\"KuvMXcxidrXJ/jgArX9iItljIfNke62GQCkdYUetg5w=\")",
      "Bash(sudo ufw:*)",
      "Bash(./install_service.sh:*)",
      "Bash(sudo systemctl status:*)",
      "Bash(git tag:*)",
      "Bash(avahi-browse:*)",
      "Bash(avahi-resolve-host-name:*)",
      "Bash(systemctl status:*)",
      "Bash(gh issue view:*)",
      "Bash(/home/hkr/.local/bin/uv run --no-sync python run_server.py)",
      "Bash(nmap:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(ssh-keygen:*)",
      "Bash(ssh-copy-id:*)",
      "Bash(git pull:*)",
      "mcp__code-context__search_code",
      "Bash(ssh:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(gh api:*)",
      "Bash(ssh-keygen:*)",
      "Bash(ssh-copy-id:*)",
      "Bash(litestream:*)",
      "Bash(./sync/manual_sync.sh:*)",
      "Bash(claude /memory-context)",
      "Bash(claude:*)",
      "mcp__memory__recall_memory",
      "mcp__memory__store_memory",
      "mcp__memory__retrieve_memory",
      "mcp__memory__search_by_tag",
      "Bash(env)",
      "Bash(printenv)",
      "WebFetch(domain:narrowbox.local)",
      "Bash(sqlite3:*)",
      "Bash(command:*)",
      "Bash(lz4:*)",
      "mcp__memory__check_database_health",
      "Bash(brew services:*)",
      "Bash(scp:*)",
      "Bash(openssl rand:*)",
      "Bash(MCP_MEMORY_SQLITE_PATH=\"/Users/hkr/Library/Application Support/mcp-memory/sqlite_vec.db\" uv run memory server --help)",
      "Bash(env MCP_MEMORY_SQLITE_PATH=\"/Users/hkr/Library/Application Support/mcp-memory/sqlite_vec.db\" uv run memory server --help)",
      "Bash(env MCP_MEMORY_SQLITE_PATH=\"/Users/hkr/Library/Application Support/mcp-memory/sqlite_vec.db\" python -c \"from src.mcp_memory_service.config import SQLITE_VEC_PATH; print(''Default path:'', SQLITE_VEC_PATH)\")",
      "Bash(env MCP_MEMORY_SQLITE_PATH=\"/Users/hkr/Library/Application Support/mcp-memory/sqlite_vec.db\" uv run python -c \"\nimport asyncio\nimport os\nimport sqlite3\n\n# First check direct SQLite access\ndb_path = ''/Users/hkr/Library/Application Support/mcp-memory/sqlite_vec.db''\nprint(f''Testing direct SQLite access to: {db_path}'')\n\ntry:\n    conn = sqlite3.connect(db_path)\n    cursor = conn.cursor()\n    cursor.execute(''SELECT COUNT(*) FROM memories'')\n    count = cursor.fetchone()[0]\n    print(f''Direct SQLite: {count} memories found'')\n    conn.close()\nexcept Exception as e:\n    print(f''Direct SQLite error: {e}'')\n\")",
      "Bash(npm test)",
      "Bash(./install.sh)",
      "mcp__context-crystallizer__init_crystallization",
      "mcp__context-crystallizer__get_crystallization_guidance",
      "mcp__context-crystallizer__get_next_file_to_crystallize",
      "mcp__context-crystallizer__store_crystallized_context",
      "mcp__context-crystallizer__get_crystallization_progress"
    ],
    "deny": [],
    "additionalDirectories": [
      "/Users/hkr/Documents/GitHub/mcp-memory-service.wiki"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": []
}